import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { PermissionedEIP712Proxy, PermissionedEIP712ProxyInterface } from "../../../../../contracts/eip712/proxy/examples/PermissionedEIP712Proxy";
type PermissionedEIP712ProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class PermissionedEIP712Proxy__factory extends ContractFactory {
    constructor(...args: PermissionedEIP712ProxyConstructorParams);
    getDeployTransaction(eas: AddressLike, name: string, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(eas: AddressLike, name: string, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<PermissionedEIP712Proxy & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): PermissionedEIP712Proxy__factory;
    static readonly bytecode = "0x6101e060405234801561001157600080fd5b5060405161307d38038061307d8339810160408190526100309161029a565b6040805180820190915260058152640312e332e360dc1b60208201526001608052600360a052600060c0819052339184918491829161007090839061019d565b6101805261007f81600161019d565b6101a05281516020808401919091206101405281519082012061016052466101005261010f6101405161016051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60e052505030610120526001600160a01b038216610140576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b0382166101c052600261015a82826103f7565b5050506001600160a01b03811661018c57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610195816101d0565b50505061050c565b60006020835110156101b9576101b283610222565b90506101ca565b816101c484826103f7565b5060ff90505b92915050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080829050601f8151111561024d578260405163305a27a960e01b815260040161018391906104b5565b8051610258826104e8565b179392505050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610291578181015183820152602001610279565b50506000910152565b600080604083850312156102ad57600080fd5b82516001600160a01b03811681146102c457600080fd5b60208401519092506001600160401b038111156102e057600080fd5b8301601f810185136102f157600080fd5b80516001600160401b0381111561030a5761030a610260565b604051601f8201601f19908116603f011681016001600160401b038111828210171561033857610338610260565b60405281815282820160200187101561035057600080fd5b610361826020830160208601610276565b8093505050509250929050565b600181811c9082168061038257607f821691505b6020821081036103a257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156103f257806000526020600020601f840160051c810160208510156103cf5750805b601f840160051c820191505b818110156103ef57600081556001016103db565b50505b505050565b81516001600160401b0381111561041057610410610260565b6104248161041e845461036e565b846103a8565b6020601f82116001811461045857600083156104405750848201515b600019600385901b1c1916600184901b1784556103ef565b600084815260208120601f198516915b828110156104885787850151825560209485019460019092019101610468565b50848210156104a65786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b60208152600082518060208401526104d4816040850160208701610276565b601f01601f19169190910160400192915050565b805160208083015191908110156103a25760001960209190910360031b1b16919050565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c051612acf6105ae60003960008181610205015281816108a80152818161092e01528181610e7d015261105c01526000610c1e01526000610bf10152600061122a015260006112020152600061115d01526000611187015260006111b10152600061049c015260006104730152600061044a0152612acf6000f3fe6080604052600436106100e85760003560e01c8063715018a61161008a578063a6d4dbc711610059578063a6d4dbc7146102b1578063b83010d3146102c4578063ed24911d146102f7578063f2fde38b1461030c57600080fd5b8063715018a61461022957806384b0196e1461023e5780638da5cb5b14610266578063954115251461029157600080fd5b806317d7de7c116100c657806317d7de7c146101ac5780633c042715146101ce57806354fd4d50146101e157806365c40b9c146101f657600080fd5b80630eabf660146100ed57806310d736d51461010257806312b11a171461016f575b600080fd5b6101006100fb366004611c8c565b61032c565b005b34801561010e57600080fd5b5061014561011d366004611cce565b60009081526003602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561017b57600080fd5b507fea02ffba7dcb45f6fc649714d23f315eef12e3b27f9a7735d8d8bf41eb2b1af15b604051908152602001610166565b3480156101b857600080fd5b506101c161038d565b6040516101669190611d55565b61019e6101dc366004611d6f565b61041f565b3480156101ed57600080fd5b506101c1610443565b34801561020257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610145565b34801561023557600080fd5b506101006104e6565b34801561024a57600080fd5b506102536104fa565b6040516101669796959493929190611daa565b34801561027257600080fd5b5060055473ffffffffffffffffffffffffffffffffffffffff16610145565b6102a461029f366004611c8c565b61055c565b6040516101669190611e6b565b6101006102bf366004611eae565b61059a565b3480156102d057600080fd5b507f78a69a78c1a55cdff5cbf949580b410778cd9e4d1ecbe6f06a7fa8dc2441b57d61019e565b34801561030357600080fd5b5061019e6105b9565b34801561031857600080fd5b50610100610327366004611ef3565b6105c8565b8060005b8181101561037d5761037584848381811061034d5761034d611f0e565b905060200281019061035f9190611f3d565b610370906080810190606001611ef3565b61062e565b600101610330565b506103888383610682565b505050565b60606002805461039c90611f7b565b80601f01602080910402602001604051908101604052809291908181526020018280546103c890611f7b565b80156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050905090565b600061043461037060c0840160a08501611ef3565b61043d82610917565b92915050565b606061046e7f0000000000000000000000000000000000000000000000000000000000000000610a62565b6104977f0000000000000000000000000000000000000000000000000000000000000000610a62565b6104c07f0000000000000000000000000000000000000000000000000000000000000000610a62565b6040516020016104d293929190611fce565b604051602081830303815290604052905090565b6104ee610b20565b6104f86000610b73565b565b60006060806000806000606061050e610bea565b610516610c17565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b60608160005b818110156105875761057f85858381811061034d5761034d611f0e565b600101610562565b506105928484610c44565b949350505050565b6105ad61037060e0830160c08401611ef3565b6105b681611043565b50565b60006105c3611143565b905090565b6105d0610b20565b73ffffffffffffffffffffffffffffffffffffffff8116610625576040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600060048201526024015b60405180910390fd5b6105b681610b73565b60055473ffffffffffffffffffffffffffffffffffffffff8281169116146105b6576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060008167ffffffffffffffff81111561069e5761069e612065565b6040519080825280602002602001820160405280156106e457816020015b6040805180820190915260008152606060208201528152602001906001900390816106bc5790505b50905060005b8281101561086a57600085858381811061070657610706611f0e565b90506020028101906107189190611f3d565b6107219061229a565b602081015180519192509080158061073e57508260400151518114155b15610775576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b8181101561081f57600083828151811061079457610794611f0e565b602002602001015190506108166040518060a0016040528087600001518152602001838152602001876040015185815181106107d2576107d2611f0e565b60200260200101518152602001876060015173ffffffffffffffffffffffffffffffffffffffff168152602001876080015167ffffffffffffffff1681525061127b565b50600101610778565b506040518060400160405280846000015181526020018381525085858151811061084b5761084b611f0e565b60200260200101819052505050506108638160010190565b90506106ea565b506040517f4cb7e9e500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690634cb7e9e59034906108df90859060040161239b565b6000604051808303818588803b1580156108f857600080fd5b505af115801561090c573d6000803e3d6000fd5b505050505050505050565b600061092a61092583612598565b6114d7565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f17325e73460405180604001604052808760000135815260200187806020019061098e9190612611565b61099790612645565b8152506040518363ffffffff1660e01b81526004016109b691906126c4565b60206040518083038185885af11580156109d4573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906109f991906126e9565b9050610a0b60c0840160a08501611ef3565b600082815260036020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905592915050565b60606000610a6f836116b9565b600101905060008167ffffffffffffffff811115610a8f57610a8f612065565b6040519080825280601f01601f191660200182016040528015610ab9576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610ac357509392505050565b60055473ffffffffffffffffffffffffffffffffffffffff1633146104f8576040517f118cdaa700000000000000000000000000000000000000000000000000000000815233600482015260240161061c565b6005805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60606105c37f0000000000000000000000000000000000000000000000000000000000000000600061179b565b60606105c37f0000000000000000000000000000000000000000000000000000000000000000600161179b565b60608160008167ffffffffffffffff811115610c6257610c62612065565b604051908082528060200260200182016040528015610ca857816020015b604080518082019091526000815260606020820152815260200190600190039081610c805790505b50905060005b82811015610e785736868683818110610cc957610cc9611f0e565b9050602002810190610cdb9190611f3d565b9050366000610ced6020840184612702565b909250905080801580610d0e5750610d08604085018561276a565b90508114155b15610d45576040517f947d5a8400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b81811015610e2657610e1e6040518060a0016040528087600001358152602001868685818110610d7a57610d7a611f0e565b9050602002810190610d8c9190612611565b610d9590612645565b8152602001610da7604089018961276a565b85818110610db757610db7611f0e565b905060600201803603810190610dcd91906127d1565b8152602001610de26080890160608a01611ef3565b73ffffffffffffffffffffffffffffffffffffffff168152602001610e0d60a0890160808a016127ed565b67ffffffffffffffff1690526114d7565b600101610d48565b50604080518082019091528435815260208101610e438486612808565b815250868681518110610e5857610e58611f0e565b602002602001018190525050505050610e718160010190565b9050610cae565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166344adc90e34846040518363ffffffff1660e01b8152600401610ed5919061286e565b60006040518083038185885af1158015610ef3573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f3a9190810190612961565b90506000805b848110156110375736888883818110610f5b57610f5b611f0e565b9050602002810190610f6d9190611f3d565b9050366000610f7f6020840184612702565b90925090508060005b8181101561102157610fa06080860160608701611ef3565b600360008a8a81518110610fb657610fb6611f0e565b6020026020010151815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600101965061101a8160010190565b9050610f88565b50505050506110308160010190565b9050610f40565b50909695505050505050565b61105a611055368390038301836129f7565b61127b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634692626734604051806040016040528085600001358152602001856020018036038101906110c09190612a65565b90526040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815281516004820152602091820151805160248301529091015160448201526064016000604051808303818588803b15801561112757600080fd5b505af115801561113b573d6000803e3d6000fd5b505050505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156111a957507f000000000000000000000000000000000000000000000000000000000000000046145b156111d357507f000000000000000000000000000000000000000000000000000000000000000090565b6105c3604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b608081015167ffffffffffffffff16158015906112af57504267ffffffffffffffff16816080015167ffffffffffffffff16105b156112e6576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60208082015180516000908152600390925260409091205473ffffffffffffffffffffffffffffffffffffffff168061134b576040517fc5723b5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116331461139a576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408301516113a881611846565b606080850151855185516020808801516080808b0151604080517f78a69a78c1a55cdff5cbf949580b410778cd9e4d1ecbe6f06a7fa8dc2441b57d9581019590955273ffffffffffffffffffffffffffffffffffffffff90971696840196909652958201939093529384015260a083015267ffffffffffffffff1660c082015260009061144e9060e0015b60405160208183030381529060405280519060200120611954565b9050846060015173ffffffffffffffffffffffffffffffffffffffff166114838284600001518560200151866040015161199c565b73ffffffffffffffffffffffffffffffffffffffff16146114d0576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b608081015167ffffffffffffffff161580159061150b57504267ffffffffffffffff16816080015167ffffffffffffffff16105b15611542576040517f1ab7da6b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6020810151604082015161155581611846565b60006116317fea02ffba7dcb45f6fc649714d23f315eef12e3b27f9a7735d8d8bf41eb2b1af160001b8560600151866000015186600001518760200151886040015189606001518a60800151805190602001208b60a001518d608001516040516020016114339a99989796959493929190998a5273ffffffffffffffffffffffffffffffffffffffff98891660208b015260408a019790975294909616606088015267ffffffffffffffff928316608088015290151560a087015260c086015260e0850193909352610100840152166101208201526101400190565b9050836060015173ffffffffffffffffffffffffffffffffffffffff166116668284600001518560200151866040015161199c565b73ffffffffffffffffffffffffffffffffffffffff16146116b3576040517f8baa579f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611702577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061172e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061174c57662386f26fc10000830492506010015b6305f5e1008310611764576305f5e100830492506008015b612710831061177857612710830492506004015b6064831061178a576064830492506002015b600a831061043d5760010192915050565b606060ff83146117b5576117ae836119be565b905061043d565b8180546117c190611f7b565b80601f01602080910402602001604051908101604052809291908181526020018280546117ed90611f7b565b801561183a5780601f1061180f5761010080835404028352916020019161183a565b820191906000526020600020905b81548152906001019060200180831161181d57829003601f168201915b5050505050905061043d565b8051602080830151604080850151905160f89490941b7fff0000000000000000000000000000000000000000000000000000000000000016928401929092526021830152604182015260009060610160405160208183030381529060405290506004816040516118b69190612a81565b9081526040519081900360200190205460ff1615611900576040517fcce9a82400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016004826040516119129190612a81565b90815260405190819003602001902080549115157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009092169190911790555050565b600061043d611961611143565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b6000806000806119ae888888886119fd565b9250925092506110378282611af7565b606060006119cb83611bff565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611a385750600091506003905082611aed565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611a8c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611ae357506000925060019150829050611aed565b9250600091508190505b9450945094915050565b6000826003811115611b0b57611b0b612a93565b03611b14575050565b6001826003811115611b2857611b28612a93565b03611b5f576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115611b7357611b73612a93565b03611bad576040517ffce698f70000000000000000000000000000000000000000000000000000000081526004810182905260240161061c565b6003826003811115611bc157611bc1612a93565b03611bfb576040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004810182905260240161061c565b5050565b600060ff8216601f81111561043d576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008083601f840112611c5257600080fd5b50813567ffffffffffffffff811115611c6a57600080fd5b6020830191508360208260051b8501011115611c8557600080fd5b9250929050565b60008060208385031215611c9f57600080fd5b823567ffffffffffffffff811115611cb657600080fd5b611cc285828601611c40565b90969095509350505050565b600060208284031215611ce057600080fd5b5035919050565b60005b83811015611d02578181015183820152602001611cea565b50506000910152565b60008151808452611d23816020860160208601611ce7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611d686020830184611d0b565b9392505050565b600060208284031215611d8157600080fd5b813567ffffffffffffffff811115611d9857600080fd5b820160e08185031215611d6857600080fd5b7fff000000000000000000000000000000000000000000000000000000000000008816815260e060208201526000611de560e0830189611d0b565b8281036040840152611df78189611d0b565b6060840188905273ffffffffffffffffffffffffffffffffffffffff8716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015611e5a578351835260209384019390920191600101611e3c565b50909b9a5050505050505050505050565b602080825282518282018190526000918401906040840190835b81811015611ea3578351835260209384019390920191600101611e85565b509095945050505050565b6000610100828403128015611ec257600080fd5b509092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611eee57600080fd5b919050565b600060208284031215611f0557600080fd5b611d6882611eca565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61833603018112611f7157600080fd5b9190910192915050565b600181811c90821680611f8f57607f821691505b602082108103611fc8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008451611fe0818460208901611ce7565b7f2e00000000000000000000000000000000000000000000000000000000000000908301908152845161201a816001840160208901611ce7565b7f2e00000000000000000000000000000000000000000000000000000000000000600192909101918201528351612058816002840160208801611ce7565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156120b7576120b7612065565b60405290565b60405160c0810167ffffffffffffffff811182821017156120b7576120b7612065565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561212757612127612065565b604052919050565b600067ffffffffffffffff82111561214957612149612065565b5060051b60200190565b60006040828403121561216557600080fd5b6040805190810167ffffffffffffffff8111828210171561218857612188612065565b604052823581526020928301359281019290925250919050565b6000606082840312156121b457600080fd5b6040516060810167ffffffffffffffff811182821017156121d7576121d7612065565b604052905080823560ff811681146121ee57600080fd5b815260208381013590820152604092830135920191909152919050565b600082601f83011261221c57600080fd5b813561222f61222a8261212f565b6120e0565b8082825260208201915060206060840286010192508583111561225157600080fd5b602085015b838110156122785761226887826121a2565b8352602090920191606001612256565b5095945050505050565b803567ffffffffffffffff81168114611eee57600080fd5b600060a082360312156122ac57600080fd5b6122b4612094565b82358152602083013567ffffffffffffffff8111156122d257600080fd5b830136601f8201126122e357600080fd5b80356122f161222a8261212f565b8082825260208201915060208360061b85010192503683111561231357600080fd5b6020840193505b8284101561233f5761232c3685612153565b825260208201915060408401935061231a565b6020850152505050604083013567ffffffffffffffff81111561236157600080fd5b61236d3682860161220b565b60408301525061237f60608401611eca565b606082015261239060808401612282565b608082015292915050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015612466578685037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00184528151805186526020908101516040828801819052815190880181905291019060009060608801905b8083101561244e5761243782855180518252602090810151910152565b60408201915060208401935060018301925061241a565b509650505060209384019391909101906001016123c3565b50929695505050505050565b600082601f83011261248357600080fd5b813567ffffffffffffffff81111561249d5761249d612065565b6124ce60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016120e0565b8181528460208386010111156124e357600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561251257600080fd5b61251a6120bd565b905061252582611eca565b815261253360208301612282565b60208201526040820135801515811461254b57600080fd5b604082015260608281013590820152608082013567ffffffffffffffff81111561257457600080fd5b61258084828501612472565b60808301525060a09182013591810191909152919050565b600060e082360312156125aa57600080fd5b6125b2612094565b82358152602083013567ffffffffffffffff8111156125d057600080fd5b6125dc36828601612500565b6020830152506125ef36604085016121a2565b604082015261260060a08401611eca565b606082015261239060c08401612282565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41833603018112611f7157600080fd5b600061043d3683612500565b73ffffffffffffffffffffffffffffffffffffffff815116825267ffffffffffffffff6020820151166020830152604081015115156040830152606081015160608301526000608082015160c060808501526126b060c0850182611d0b565b60a093840151949093019390935250919050565b6020815281516020820152600060208301516040808401526105926060840182612651565b6000602082840312156126fb57600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261273757600080fd5b83018035915067ffffffffffffffff82111561275257600080fd5b6020019150600581901b3603821315611c8557600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261279f57600080fd5b83018035915067ffffffffffffffff8211156127ba57600080fd5b6020019150606081023603821315611c8557600080fd5b6000606082840312156127e357600080fd5b611d6883836121a2565b6000602082840312156127ff57600080fd5b611d6882612282565b600061281661222a8461212f565b8381526020810190600585901b84013681111561283257600080fd5b845b81811015611ea357803567ffffffffffffffff81111561285357600080fd5b61285f36828901612500565b85525060209384019301612834565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015612466577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0878603018452815180518652602090810151604082880181905281519088018190529101906060600582901b88018101919088019060005b81811015612947577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08a8503018352612931848651612651565b60209586019590945092909201916001016128f7565b509197505050602094850194929092019150600101612896565b60006020828403121561297357600080fd5b815167ffffffffffffffff81111561298a57600080fd5b8201601f8101841361299b57600080fd5b80516129a961222a8261212f565b8082825260208201915060208360051b8501019250868311156129cb57600080fd5b6020840193505b828410156129ed5783518252602093840193909101906129d2565b9695505050505050565b6000610100828403128015612a0b57600080fd5b50612a14612094565b82358152612a258460208501612153565b6020820152612a3784606085016121a2565b6040820152612a4860c08401611eca565b6060820152612a5960e08401612282565b60808201529392505050565b600060408284031215612a7757600080fd5b611d688383612153565b60008251611f71818460208701611ce7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea164736f6c634300081a000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IEAS";
            readonly name: "eas";
            readonly type: "address";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "AccessDenied";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DeadlineExpired";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ECDSAInvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "length";
            readonly type: "uint256";
        }];
        readonly name: "ECDSAInvalidSignatureLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "s";
            readonly type: "bytes32";
        }];
        readonly name: "ECDSAInvalidSignatureS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidEAS";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidShortString";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSignature";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NotFound";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "str";
            readonly type: "string";
        }];
        readonly name: "StringTooLong";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "UsedSignature";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [];
        readonly name: "EIP712DomainChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyAttestationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "attestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "eip712Domain";
        readonly outputs: readonly [{
            readonly internalType: "bytes1";
            readonly name: "fields";
            readonly type: "bytes1";
        }, {
            readonly internalType: "string";
            readonly name: "name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "version";
            readonly type: "string";
        }, {
            readonly internalType: "uint256";
            readonly name: "chainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "verifyingContract";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "extensions";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAttestTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "uid";
            readonly type: "bytes32";
        }];
        readonly name: "getAttester";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDomainSeparator";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getEAS";
        readonly outputs: readonly [{
            readonly internalType: "contract IEAS";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getName";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getRevokeTypeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "recipient";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint64";
                    readonly name: "expirationTime";
                    readonly type: "uint64";
                }, {
                    readonly internalType: "bool";
                    readonly name: "revocable";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "refUID";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "data";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct AttestationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "attester";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedProxyAttestationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiAttestByDelegation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "";
            readonly type: "bytes32[]";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData[]";
                readonly name: "data";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct MultiDelegatedProxyRevocationRequest[]";
            readonly name: "multiDelegatedRequests";
            readonly type: "tuple[]";
        }];
        readonly name: "multiRevokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "schema";
                readonly type: "bytes32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "uid";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "value";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct RevocationRequestData";
                readonly name: "data";
                readonly type: "tuple";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct Signature";
                readonly name: "signature";
                readonly type: "tuple";
            }, {
                readonly internalType: "address";
                readonly name: "revoker";
                readonly type: "address";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadline";
                readonly type: "uint64";
            }];
            readonly internalType: "struct DelegatedProxyRevocationRequest";
            readonly name: "delegatedRequest";
            readonly type: "tuple";
        }];
        readonly name: "revokeByDelegation";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "version";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): PermissionedEIP712ProxyInterface;
    static connect(address: string, runner?: ContractRunner | null): PermissionedEIP712Proxy;
}
export {};
//# sourceMappingURL=PermissionedEIP712Proxy__factory.d.ts.map